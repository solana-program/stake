name: Publish Rust Crate

on:
  workflow_dispatch:
    inputs:
      crate_path:
        description: Crate to publish
        required: true
        type: choice
        options:
          - clients/rust
          - interface
          - program
      level:
        description: Level
        required: true
        default: patch
        type: choice
        options:
          - patch
          - minor
          - major
          - rc
          - beta
          - alpha
          - release
          - version
      version:
        description: Version
        required: false
        type: string
      dry_run:
        description: Dry run
        required: true
        default: true
        type: boolean
      create_release:
        description: Create a GitHub release
        required: true
        type: boolean
        default: true

jobs:
  test:
    name: Test Rust Crate
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-test-publish-${{ inputs.crate_path }}
          cargo-cache-fallback-key: cargo-test-publish
          toolchain: build, format, lint, test
          solana: true

      - name: Format
        run: pnpm tsx ./scripts/rust.mts format "${{ inputs.crate_path }}"

      - name: Lint
        run: pnpm tsx ./scripts/rust.mts lint "${{ inputs.crate_path }}"

      - name: Build Program
        run: pnpm program:build

      - name: Test
        run: pnpm tsx ./scripts/rust.mts test "${{ inputs.crate_path }}"

  publish:
    name: Publish Rust Crate
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-test-publish-${{ inputs.crate_path }}
          cargo-cache-fallback-key: cargo-test-publish
          toolchain: build

      - name: Install Cargo Release
        run: which cargo-release || cargo install cargo-release@0.25.15

      - name: Ensure CARGO_REGISTRY_TOKEN variable is set
        env:
          token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        if: ${{ env.token == '' }}
        run: |
          echo "The CARGO_REGISTRY_TOKEN secret variable is not set"
          echo "Go to \"Settings\" -> \"Secrets and variables\" -> \"Actions\" -> \"New repository secret\"."
          exit 1

      - name: Set Git Author
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"

      - name: Publish Crate
        id: publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          if [ "${{ inputs.level }}" == "version" ]; then
            LEVEL=${{ inputs.version }}
          else
            LEVEL=${{ inputs.level }}
          fi

          if [ "${{ inputs.dry_run }}" == "true" ]; then
            OPTIONS="--dry-run"
          else
            OPTIONS=""
          fi

          pnpm tsx ./scripts/rust.mts publish ${{ inputs.crate_path }} $LEVEL $OPTIONS

      - name: Push Commit and Tag
        if: github.event.inputs.dry_run != 'true'
        run: git push origin --follow-tags

      - name: Create GitHub release
        if: github.event.inputs.create_release == 'true' && github.event.inputs.dry_run != 'true'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.publish.outputs.crate }}@v${{ steps.publish.outputs.new_version }}
